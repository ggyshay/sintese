{"version":3,"sources":["assets/room-waves.mp4","assets/wave0001-0128.webm","assets/timbres.png","assets/fm.mp4","assets/fm-schema.png","components/vertical-slider.tsx","components/display.tsx","interactions/aditive-component.tsx","interactions/aditive.tsx","strings.ts","components/knob.tsx","interactions/subtractive-component.tsx","interactions/subtractive.tsx","interactions/fm-component.tsx","interactions/fm.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","SLIDER_HEIGHT","VerticalSlider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_element","cornerY","handleChange","y","rawValue","value","Math","min","max","onChange","scaleValue","v","handleMouseDown","e","preventDefault","clientY","addEventListener","handleMouseMove","removeEventListener","handleMouseUp","console","log","state","x","React","inherits","createClass","key","current","getBoundingClientRect","top","react","className","onMouseDown","style","height","width","ref","DisplayComponent","node","createPath","d3","domain","data","d","range","logarithmic","base","E","pathData","lineGen","_","isEqual","concat","id","attr","setState","handleRef","r","react_default","a","createElement","Component","AditiveSynthesisComponent","handleSliderChange","index","values","paddedValues","toConsumableArray","map","splice","length","phasors","imag","Float32Array","real","i","push","spectrum","ifft","transform","forEach","element","idx","onWaveformChange","sort","b","handlePlayClick","isPlaying","onStop","onStart","_this2","backgroundColor","position","marginLeft","padding","display","justifyContent","flexDirection","border","alignItems","vertical_slider_VerticalSlider","marginTop","onClick","display_DisplayComponent","AditiveSynthesis","ctx","osc","env","interval","handleWaveformChange","wave","createPeriodicWave","setPeriodicWave","handleStart","resume","playSequence","setInterval","handleStop","clearInterval","playNote","time","frequency","setValueAtTime","gain","linearRampToValueAtTime","exponentialRampToValueAtTime","now","currentTime","OscillatorNode","GainNode","connect","destination","start","aditive_component_AditiveSynthesisComponent","strings","title","paragraphs","Knob","circle","R","handleDragStart","document","handleDrag","handleDragEnd","startY","pageY","startAngle","angle","startValue","deltaY","calculateValue","deltaY1","alpha","pt","exp","createArc","ang","x0","xp","sin","toRadians","yp","cos","getInitialAngle","displayValue","toFixed","cx","cy","fill","stroke","trailColor","lineColor","strokeWidth","color","label","PI","SubtractiveSynthesisComponent","handleFilterTypeClick","type","onFilterTypeChange","filterResponse","outputResponse","knob_Knob","onFrequencyChange","margin","SubtractiveSynthesis","filter","AnalisisInterval","analyser","handleFrequencyChange","getFilterFrequencyResponse","handleFilterTypeChange","name","getFloatFrequencyData","frequencies","phaseResponse","getFrequencyResponse","AnalyserNode","fftSize","BiquadFilterNode","Q","subtractive_component_SubtractiveSynthesisComponent","FMComponent","onPlayClick","playing","outputSpectrum","onF1Change","f1","onMod1Click","onF2Change","f2","onMod2Click","onF3Change","f3","FMSynthesis","osc1","osc2","osc3","amp1","amp2","handleF1Change","freq1","handleF2Change","freq2","handleF3Change","freq3","handleMod1Click","handleMod2Click","fm_component_FMComponent","App","AudioContext","flex","autoPlay","loop","muted","src","require","highlighter","aditive_AditiveSynthesis","subtractive_SubtractiveSynthesis","fm_FMSynthesis","text","pieces","split","piece","includes","Fragment","cleanPiece","replace","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1668e49a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/room-waves.88e64871.mp4\";","module.exports = __webpack_public_path__ + \"static/media/wave0001-0128.3ae828b4.webm\";","module.exports = __webpack_public_path__ + \"static/media/timbres.ad5e64e3.png\";","module.exports = __webpack_public_path__ + \"static/media/fm.6d6d4342.mp4\";","module.exports = __webpack_public_path__ + \"static/media/fm-schema.f33d2d41.png\";","import * as React from 'react';\nimport './slider.css'\n\nconst SLIDER_HEIGHT = 150\n\nexport interface VerticalSliderProps {\n    onChange?: (value: number) => void;\n    value?: number;\n    width?: number;\n}\n\nexport class VerticalSlider extends React.Component<VerticalSliderProps, any>  {\n    private _element: any;\n    private cornerY: number;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            x: null,\n            y: null\n        }\n\n        this._element = React.createRef();\n    }\n\n    componentDidMount() {\n        this.cornerY = this._element.current && this._element.current.getBoundingClientRect().top;\n    }\n    render() {\n        return <div\n            className='slider-container'\n            onMouseDown={this.handleMouseDown}\n            style={{ height: SLIDER_HEIGHT, width: this.props.width }}\n        ref={this._element}\n        >\n            <div className='value-display' style={{ height: this.scaleValue(this.props.value), width: this.props.width }} />\n        </div>\n    }\n\n    handleChange = (y) => {\n        const rawValue = 100 - 100 * y / SLIDER_HEIGHT\n        const value = Math.min(100, Math.max(rawValue, 0));\n        this.props.onChange && this.props.onChange(value)\n    }\n\n    scaleValue = v => {\n        return (v) * SLIDER_HEIGHT / 100\n    }\n\n    handleMouseDown = e => {\n        e.preventDefault();\n        this.handleChange(e.clientY - this.cornerY)\n        addEventListener('mousemove', this.handleMouseMove);\n        addEventListener('mouseup', () => {\n            removeEventListener('mousemove', this.handleMouseMove)\n            this.handleMouseUp();\n        })\n        return false\n    }\n\n    handleMouseMove = e => {\n        this.handleChange(e.clientY - this.cornerY)\n    }\n\n    handleMouseUp = () => { console.log('mouse up') }\n}","import React from 'react';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\n\nexport interface DisplayComponentProps {\n    data: { x: number, y: number }[];\n    id: string;\n    logarithmic?: boolean;\n    min?: number;\n    max?: number;\n}\n\nexport class DisplayComponent extends React.Component<DisplayComponentProps, any> {\n    private node: any = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pathData: null\n        }\n    }\n    componentDidUpdate() {\n        this.createPath();\n    }\n\n    createPath = () => {\n        const width = this.node.getBoundingClientRect().width;\n        const height = this.node.getBoundingClientRect().height;\n        const y = d3.scaleLinear()\n            .domain([this.props.min || d3.min(this.props.data, d => d.y), this.props.max || d3.max(this.props.data, d => d.y)]).range([height - 10, 10])\n        const min = d3.min(this.props.data, d => d.x || 0.01);\n        const max = d3.max(this.props.data, d => d.x);  \n        const x = this.props.logarithmic ?\n            d3.scaleLog()\n                .domain([min, max])\n                .range([0, width]).base(Math.E) :\n            d3.scaleLinear().domain([d3.min(this.props.data, d => d.x), d3.max(this.props.data, d => d.x)])\n                .range([0, width]);\n        const lineGen = d3.line()\n            .x((d) => x(d.x || 0.001))\n            .y(d => y(d.y))\n        const pathData = lineGen(this.props.data);\n        if (_.isEqual(this.state.pathData, pathData)) return;\n        d3.select(`#waveform${this.props.id}`).attr('d', pathData).attr('fill', 'none').attr('stroke', '#da0027')\n        this.setState({ pathData });\n    }\n\n    componentDidMount() { this.createPath() }\n\n    render() {\n        return (\n            <svg className=\"display\" style={{ height: '100%', width: '100%' }\n            } ref={this.handleRef} > <path id={'waveform' + this.props.id}> </path></svg >\n        )\n    }\n\n    handleRef = r => this.node = r\n}","import React from 'react';\nimport { VerticalSlider } from '../components';\nimport { DisplayComponent } from '../components/display';\nimport { ifft } from 'fft-js';\n\nexport interface AditiveSynthesisComponentProps {\n    onStart: () => void;\n    onStop: () => void;\n    onWaveformChange: (real: Float32Array, imag: Float32Array) => void;\n}\n\n\nexport class AditiveSynthesisComponent extends React.Component<AditiveSynthesisComponentProps, any>{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            transform: [],\n            isPlaying: false\n        }\n    }\n    render() {\n        return (\n            <div style={{ width: '100vw', backgroundColor: 'orange', position: 'relative', marginLeft: -200, padding: 20, display: 'flex', justifyContent: 'center' }}>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', width: 500, border: '1px solid white' }}>\n                    <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                            {this.state.values.map((v, idx) => <VerticalSlider onChange={value => this.handleSliderChange(value, idx)} value={v} width={5} />)}\n                        </div>\n                        <div style={{ backgroundColor: 'green', width: 20, height: 20, marginTop: 20 }} onClick={this.handlePlayClick} />\n                    </div>\n                    <div style={{ width: 160, height: 160, border: '1px solid black', marginLeft: 20 }}>\n                        <DisplayComponent data={this.state.transform} id=\"chirros\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    handleSliderChange = (value, index) => {\n        const values = this.state.values;\n        values[index] = value;\n        this.handleChange(values)\n        this.setState({ values });\n    }\n\n    handleChange = values => {\n        let paddedValues = [0, ...values.map(v => v / 100)];\n        paddedValues.splice(paddedValues.length - 1, 1)\n        // for (let i = paddedValues.length; i < 1024; i++) {\n        //     paddedValues.push(0);\n        // }\n        const phasors = []\n        const imag = new Float32Array(paddedValues.length);\n        const real = new Float32Array(paddedValues.length);\n\n        for (let i = 0; i < paddedValues.length; i++) {\n            phasors.push([0, -paddedValues[i]])\n            real[i] = 0;\n            imag[i] = -paddedValues[i];\n        }\n        const spectrum = ifft(phasors);\n\n        let transform = [];\n\n        spectrum.forEach((element, idx: number) => transform[idx] = { x: idx, y: element[0] });\n\n        this.props.onWaveformChange(real, imag);\n        transform = transform.sort((a, b) => a.x - b.x)\n        this.setState({ transform })\n    }\n\n    handlePlayClick = () => {\n        if (this.state.isPlaying) {\n            this.props.onStop()\n            this.setState({ isPlaying: false });\n        } else {\n            this.props.onStart()\n            this.setState({ isPlaying: true });\n        }\n    }\n}\n\n","import React from 'react';\nimport { AditiveSynthesisComponent } from './aditive-component';\n\nexport class AditiveSynthesis extends React.Component<any> {\n    private ctx: AudioContext;\n    private osc: OscillatorNode;\n    private env: GainNode;\n    private interval: any;\n\n    constructor(props) {\n        super(props);\n\n        this.ctx = props.ctx;\n        this.osc = new OscillatorNode(this.ctx);\n        this.env = new GainNode(this.ctx);\n\n        this.env.gain.value = 0;\n        this.osc.connect(this.env);\n        this.env.connect(this.ctx.destination);\n    }\n\n    componentDidMount() {\n        this.osc.start();\n    }\n    render() {\n        return <AditiveSynthesisComponent onWaveformChange={this.handleWaveformChange} onStart={this.handleStart} onStop={this.handleStop} />\n    }\n\n    handleWaveformChange = (real, imag) => {\n        const wave = this.ctx.createPeriodicWave(real, imag);\n        this.osc.setPeriodicWave(wave);\n    }\n\n    handleStart = () => {\n        if (this.ctx.state !== 'running') this.ctx.resume();\n        this.playSequence()\n        this.interval = setInterval(() => {\n            this.playSequence()\n        }, 4000)\n    }\n\n    handleStop = () => {\n        clearInterval(this.interval)\n    }\n\n    playNote = (time, frequency) => {\n        this.osc.frequency.setValueAtTime(frequency, time)\n        this.env.gain.linearRampToValueAtTime(1, time + 0.01);\n        this.env.gain.exponentialRampToValueAtTime(0.01, time + 0.23);\n        this.env.gain.linearRampToValueAtTime(0, time + 0.24)\n    }\n\n    playSequence = () => {\n        const now = this.ctx.currentTime;\n        this.playNote(now, 440);\n        this.playNote(now + 0.250, 440);\n\n        this.playNote(now + 0.5, 523);\n        this.playNote(now + 0.75, 440);\n\n        this.playNote(now + 1, 440);\n        this.playNote(now + 1.25, 630);\n        this.playNote(now + 1.5, 391);\n\n        this.playNote(now + 2, 880);\n        this.playNote(now + 2.250, 880);\n\n        this.playNote(now + 2.5, 1046);\n        this.playNote(now + 2.75, 880);\n\n        this.playNote(now + 3, 880);\n        this.playNote(now + 3.25, 1260);\n        this.playNote(now + 3.5, 782);\n    }\n}","export const strings = {\n    title: 'Síntese Musical',\n    soundPhysics: {\n        title: 'Física do som',\n        paragraphs: [\n            'Para entender como a síntese funciona é muito importante entender como o som funciona. O som primeiro sai do emissor, como caixas, violões ou bocas das pessoas, viaja pelo ar em ondas sonoras até chegar em um receptor, como a sua orelha ou um microfone.',\n            'Enquanto viaja no ar, o som se comporta como uma onda, mas o que isso quer dizer? Bem existem diversas ondas diferentes: As mecânicas (como o som, as ondas do mar e terremotos) e as eletromagnéticas (como a luz e as ondas de rádio). As ondas mecânicas precisam de um meio físico para se propagar (diferente das eletromagnéticas que se propagam até no espaço).',\n            'O som se propaga aumentando e diminuindo a pressão no ar, mas como é difícil de se visualizar esse fenômeno podemos fazer uma analogia com uma corda vibrando.',\n            'Desse modelo podemos tirar algumas ideias que se aplicam a todos os tipos de onda. Se a gente observar um ponto dessa corda vamos ver que ele sobe e desce, assim como a pressão em um ponto parado do ar(dentro da sua orelha, por exemplo). O percurso que ela faz até voltar ao mesmo lugar (por exemplo da maior pressão, diminuindo até a menor e voltando à maior pressão) é chamado de uma <strong>oscilação, ou período de oscilação.</strong>',\n            '<strong>O período</strong> é quanto tempo a onda demora para completar uma oscilação, e é medido em segundos.',\n            '<strong>A frequência</strong> é o inverso do período, ou seja, quanto maior o período menor a frequência e vice-versa. A frequência é medida em hertz.',\n            '<strong>A forma de onda</strong> é a forma de um período e está profundamente ligada com como percebemos o som (seu timbre).'\n        ],\n    },\n    spectrum: {\n        title: 'Espectro',\n        paragraphs: [\n            'Talvez o conceito mais importante para entender a síntese (e a ciência da música) seja o conceito de espectro. O som mais \\'puro\\' que existe é o <strong>seno</strong>',\n            'Um tal de Fourrier [link] disse que todos os outros sons são combinações de senos de diferentes frequencias '\n        ]\n    },\n    synthesis: {\n        title: 'Síntese',\n        paragraphs: [\n            '\"Síntese sonora é a técnica de gerar sons do zero, usando hardware ou softwares\"'\n        ]\n    },\n    additive: {\n        title: 'Síntese Aditiva',\n        paragraphs: [\n            'Este método de síntese consiste em escolher a dedo os harmônicos que vão compor o som final.'\n        ]\n    },\n    subtractive: {\n        title: 'Síntese Subtrativa',\n        paragraphs: [\n            `Esta é a síntese mais comum, usada em quase todos os sintetizadores.\nNela você escolhe uma (ou mais) ondas, que vão ter todo o conteudo harmonico, então voce escolhe, por meio de um filtro, quais harmonicos voce não quer e os remove, dai o nome subtrativa.\nOs filtros costumam ser passa-baixas ( corta frequencias mais altas do que uma frequência escolhida e deixa o resto passar), passa altas (corta as mais baixas do que uma certa frequência e deixa o resto passar) e passa-banda (deixa uma região passar e tudo que esta fora dela não.`\n        ]\n    },\n    fm: {\n        title: 'Síntese FM',\n        paragraphs: [\n            'A sintese FM, de inicio, parece mais complexa do que as outras, mas pode te trazer resultados sonoros muito interessantes.',\n            'Nela temos pelo menos dois osciladores (podem ser a forma de onda que voce quiser: senos, quadradas, serras … ), e da maneira mais simples, apenas um deles é conectado na saída. A frequência desse oscilador, ao invez de ser fixa como nos outros casos é controlada pela saída do outro oscilador',\n            'Os sintetizadores que usam essa tecnica tem geralmente mais de dois osciladores e assim o usuario pode escolher como eles estão conectados, chamado de algoritimo.',\n\n        ]\n    },\n    others: {\n        title: 'Outras Sínteses',\n        paragraphs: [\n            'As sinteses fm, subtrativa e aditiva são as principais. Porém exitem muitas outras ideias e maneiras de criar o som. ',\n            'Modelagem fisica (Physical modelling) é a sintese que tenta modelar geralmente um instrumento de impacto como um tambor. Nela voce escolhe as caracteristicas da baqueta e do objeto recebendo o impacto.',\n            'Karplus-strong tem um carater mais experimental (o som fica bem diferente e um pouco sem controle) acontece quando se liga a saída de um elemento (pode ser um filtro ou um delay) em sua propria entrada (alguns delays tem o parametro feedback, que deve ser ajustado para algo em torno de 100%) e então mude os parametros como frequência de corte (cutoff), tempo de delay, resonancia entre outros e veja o que acontece!'\n        ]\n    }\n\n}","import * as React from 'react';\nimport './knob.css';\n\nexport interface KnobState {\n    value: number;\n    angle: number;\n    startY: number;\n    startAngle: number;\n    startValue: number;\n}\n\nexport interface KnobProps {\n    onChange?: (value: number) => void;\n    min: number;\n    max: number;\n    arc?: number;\n    logarithmic?: boolean;\n    value?: number;\n    label?: string;\n    trailColor?: string;\n    lineColor?: string;\n    color?: string;\n}\n\n\nexport class Knob extends React.Component<KnobProps, KnobState> {\n    private circle = null;\n    private R: number = 0;\n    private width: number = 0;\n    private height: number = 0;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value || props.min,\n            angle: this.getInitialAngle(props.value),\n            startY: null,\n            startAngle: null,\n            startValue: null,\n        }\n        this.R = props.R || 20;\n        this.width = 2 * this.R + 6;\n        this.height = this.width;\n    }\n\n    componentDidMount() { this.circle.addEventListener('mousedown', this.handleDragStart) }\n    componentWillUnmount() { this.circle.addEventListener('mousedown', this.handleDragStart) }\n\n    render() {\n        const value = this.props.value || this.state.value;\n        const displayValue = value < 10 ? value.toFixed(3) : (value < 100 ? value.toFixed(2) : (value < 1000 ? value.toFixed(1) : value.toFixed(0)))\n        return (\n            <div className=\"knob-container\">\n                <div style={{ width: this.width, height: this.height, position: 'relative' }}>\n                    <svg className=\"knob\" width={this.width} height={this.height} transform=\"rotate (-150) \">\n                        <circle cx={this.width / 2} cy={this.height / 2} r={this.R} ref={ref => this.circle = ref} fill=\"transparent\" stroke=\"none\" />\n                        <path d={`M${this.R + 3},3 L${this.R + 3}, 10`} stroke={this.props.trailColor || '#202020'} transform={`rotate(${this.state.angle} ${this.width / 2} ${this.height / 2})`} />\n                        <path d={this.createArc(300)} stroke={this.props.lineColor || '#202020'} fill=\"none\" strokeWidth=\"3px\" />\n                        <path d={this.createArc(this.state.angle)} stroke={this.props.color || '#00DACD'} fill=\"none\" strokeWidth=\"3px\" />\n                    </svg>\n                    <p className=\"value-text unselectable\">{displayValue}</p>\n                </div>\n                <p className=\"label unselectable\">{this.props.label}</p>\n            </div>\n        )\n    }\n\n    handleDragStart = e => {\n        e.preventDefault();\n        document.addEventListener('mousemove', this.handleDrag);\n        document.addEventListener('mouseup', this.handleDragEnd);\n        this.setState({ startY: e.pageY, startAngle: this.state.angle, startValue: this.props.value || this.state.value });\n    }\n\n    handleDrag = (e) => {\n        let angle = this.state.angle;\n        let value = this.props.value || this.state.value;\n        let deltaY = -e.pageY + this.state.startY;\n\n        if (deltaY > 400) deltaY = 400;\n        if (deltaY < -400) deltaY = -400;\n\n        angle = 3 * deltaY / 4 + this.state.startAngle;\n        if (angle > 300) angle = 300;\n        else if (angle < 0) angle = 0;\n\n        value = this.calculateValue(deltaY / 400);\n\n        if (value < this.props.min) value = this.props.min;\n        if (value > this.props.max) value = this.props.max;\n\n        if (this.props.onChange) this.props.onChange(value);\n        if (this.props.value) {\n            this.setState({ angle });\n        } else {\n            this.setState({ value, angle });\n        }\n    }\n\n\n    calculateValue = deltaY1 => {\n        if (this.props.logarithmic) {\n            const alpha = Math.log(this.props.max / this.props.min);\n            const pt = 1 / alpha * Math.log(this.state.startValue / this.props.min);\n            return this.props.min * Math.exp(alpha * (deltaY1 + pt))\n        }\n        return deltaY1 * (this.props.max - this.props.min) + this.state.startValue;\n    }\n\n    createArc = (ang: number) => {\n        const x0 = this.width / 2, y0 = 3;\n        const xp = x0 + Math.sin(toRadians(ang)) * this.R;\n        const yp = y0 + (1 - Math.cos(toRadians(ang))) * this.R;\n        return `M${x0} ${y0} A ${this.R} ${this.R}, 0, ${ang > 180 ? 1 : 0}, 1, ${xp}, ${yp}`\n    }\n\n    handleDragEnd = e => {\n        document.removeEventListener('mousemove', this.handleDrag);\n        document.removeEventListener('mouseup', this.handleDragEnd);\n        this.setState({ startY: null, startValue: null, startAngle: null })\n    }\n\n    getInitialAngle = (v) => {\n        if (!v) return 0;\n        if (this.props.logarithmic) {\n            const alpha = Math.log(this.props.max / this.props.min);\n            return 300 * Math.log(v / this.props.min) / alpha;\n        } else {\n            return 300 * (v - this.props.min) / (this.props.max - this.props.min)\n        }\n    }\n\n}\nconst toRadians = a => Math.PI * a / 180","import React from 'react';\nimport { DisplayComponent } from '../components/display';\nimport { Knob } from '../components/knob';\n\nexport interface SubtractiveSynthesisComponentProps {\n    onFrequencyChange: (value: number) => void;\n    frequency: number;\n    onFilterTypeChange: (type: String) => void;\n    onStart: () => void;\n    onStop: () => void;\n    filterResponse: Float32Array\n    outputResponse: Float32Array\n}\n\nexport class SubtractiveSynthesisComponent extends React.Component<SubtractiveSynthesisComponentProps, any> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isPlaying: false\n        }\n    }\n    render() {\n        const filterResponse = [];\n        for (let i = 0; i < this.props.filterResponse.length; i++) {\n            filterResponse.push({ x: i, y: this.props.filterResponse[i] })\n        }\n        const outputResponse = [];\n        for (let i = 0; i < this.props.outputResponse.length; i++) {\n            outputResponse.push({ x:i, y: 20*Math.exp(this.props.outputResponse[i]/100) })\n        }\n        return (\n            <div style={{ width: '100vw', backgroundColor: 'orange', position: 'relative', marginLeft: -200, padding: 20, display: 'flex', justifyContent: 'center', height: 250 }}>\n                <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                    <div style={{ border: '1px solid black' }}>\n                        <div style={{ height: 150 }}>\n                            <DisplayComponent data={filterResponse} id=\"asdasdasd\" min={0} max={1.8} />\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <Knob\n                                min={20}\n                                max={20000}\n                                value={this.props.frequency}\n                                onChange={this.props.onFrequencyChange}\n                                label={'Frequência'}\n                                logarithmic\n                            />\n                            <div\n                                style={{ width: 20, height: 20, backgroundColor: 'white', margin: 5 }}\n                                onClick={this.handleFilterTypeClick('lowpass')} />\n                            <div\n                                style={{ width: 20, height: 20, backgroundColor: 'white', margin: 5 }}\n                                onClick={this.handleFilterTypeClick('bandpass')} />\n                            <div\n                                style={{ width: 20, height: 20, backgroundColor: 'white', margin: 5 }}\n                                onClick={this.handleFilterTypeClick('highpass')} />\n                        </div>\n                    </div>\n                    <div style={{ border: '1px solid blue', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }}>\n                        <div style={{ height: 150 }}>\n                            <DisplayComponent data={outputResponse} id=\"asdadfsdg\" max={20} min={0} />\n\n                        </div>\n                        <div style={{ backgroundColor: 'green', width: 20, height: 20 }} onClick={this.handlePlayClick} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    handleFilterTypeClick = type => () => {\n        this.props.onFilterTypeChange(type);\n    }\n\n    handlePlayClick = () => {\n        if (this.state.isPlaying) {\n            this.props.onStop()\n            this.setState({ isPlaying: false });\n        } else {\n            this.props.onStart();\n            this.setState({ isPlaying: true });\n        }\n    }\n}","import React from 'react';\nimport { SubtractiveSynthesisComponent } from './subtractive-component';\n\nconst alpha = 0.00674585476;\n\nexport class SubtractiveSynthesis extends React.Component<any, any> {\n    private osc: OscillatorNode;\n    private env: GainNode;\n    private filter: BiquadFilterNode;\n    private ctx: AudioContext;\n    private interval: any;\n    private AnalisisInterval: any;\n    private analyser: AnalyserNode;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            frequency: 1000,\n            filterResponse: [],\n            outputResponse: []\n        }\n        this.ctx = props.ctx;\n        this.analyser = new AnalyserNode(this.ctx);\n        this.analyser.fftSize = 2048\n\n        this.osc = new OscillatorNode(props.ctx);\n        this.osc.type = \"square\"\n\n        this.env = new GainNode(props.ctx);\n        this.env.gain.value = 0;\n\n        this.filter = new BiquadFilterNode(props.ctx);\n        this.filter.frequency.value = this.state.frequency;\n        this.filter.Q.value = 3;\n\n\n        this.osc.connect(this.filter);\n        this.filter.connect(this.env);\n        this.env.connect(this.analyser);\n        this.analyser.connect(this.ctx.destination);\n    }\n\n    componentDidMount() {\n        this.osc.start();\n        this.getFilterFrequencyResponse();\n    }\n\n    render() {\n        return <SubtractiveSynthesisComponent\n            onFrequencyChange={this.handleFrequencyChange}\n            frequency={this.state.frequency}\n            onFilterTypeChange={this.handleFilterTypeChange}\n            onStart={this.handleStart}\n            onStop={this.handleStop}\n            filterResponse={this.state.filterResponse}\n            outputResponse={this.state.outputResponse}\n        />\n    }\n\n    handleFrequencyChange = frequency => {\n        this.filter.frequency.value = frequency;\n        this.getFilterFrequencyResponse();\n        this.setState({ frequency })\n    }\n\n    handleFilterTypeChange = name => {\n        this.filter.type = name;\n        this.getFilterFrequencyResponse();\n    }\n    handleStart = () => {\n        if (this.ctx.state !== 'running') this.ctx.resume();\n\n        this.playSequence()\n        this.interval = setInterval(() => {\n            this.playSequence()\n        }, 4000)\n\n        this.AnalisisInterval = setInterval(() => {\n            const outputResponse = new Float32Array(1024);\n            this.analyser.getFloatFrequencyData(outputResponse)\n            this.setState({ outputResponse });\n\n        }, 2);\n    }\n\n    handleStop = () => {\n        clearInterval(this.interval)\n    }\n\n    playNote = (time, frequency) => {\n        this.osc.frequency.setValueAtTime(frequency, time)\n        this.env.gain.linearRampToValueAtTime(1, time + 0.01);\n        this.env.gain.exponentialRampToValueAtTime(0.01, time + 0.23);\n        this.env.gain.linearRampToValueAtTime(0, time + 0.24)\n    }\n\n    playSequence = () => {\n        const now = this.ctx.currentTime;\n        this.playNote(now, 440);\n        this.playNote(now + 0.250, 440);\n\n        this.playNote(now + 0.5, 523);\n        this.playNote(now + 0.75, 440);\n\n        this.playNote(now + 1, 440);\n        this.playNote(now + 1.25, 630);\n        this.playNote(now + 1.5, 391);\n\n        this.playNote(now + 2, 880);\n        this.playNote(now + 2.250, 880);\n\n        this.playNote(now + 2.5, 1046);\n        this.playNote(now + 2.75, 880);\n\n        this.playNote(now + 3, 880);\n        this.playNote(now + 3.25, 1260);\n        this.playNote(now + 3.5, 782);\n    }\n\n    getFilterFrequencyResponse = () => {\n        const frequencies = new Float32Array(1024);\n        const filterResponse = new Float32Array(1024);\n        const phaseResponse = new Float32Array(1024);\n        for (let i = 0; i < 1024; i++) {\n            frequencies[i] = 20 * Math.exp(alpha * i)\n        }\n        this.filter.getFrequencyResponse(frequencies, filterResponse, phaseResponse);\n        this.setState({ filterResponse });\n    }\n}","import React from 'react';\nimport { Knob } from '../components/knob';\nimport { DisplayComponent } from '../components/display';\n\nexport interface FMComponentProps {\n    onStart: () => void;\n    onStop: () => void;\n    onF1Change: (v: number) => void;\n    onF2Change: (v: number) => void;\n    onF3Change: (v: number) => void;\n    onMod1Click: () => void;\n    onMod2Click: () => void;\n    f1: number;\n    f2: number;\n    f3: number;\n    outputSpectrum: Float32Array | number[]\n}\n\nexport class FMComponent extends React.Component<FMComponentProps, any> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playing: false\n        }\n    }\n    render() {\n        let outputSpectrum = [];\n        for (let i = 0; i < this.props.outputSpectrum.length; i++) {\n            outputSpectrum.push({ x: Math.log(i + 1), y: this.props.outputSpectrum[i] });\n        }\n        return (\n            <div style={{ width: '100vw', backgroundColor: 'orange', position: 'relative', marginLeft: -200, padding: 20, display: 'flex', justifyContent: 'center', height: 250 }}>\n                <div>\n                    <div style={{ display: 'flex' }}>\n                        <Knob min={0.1} max={1000} logarithmic onChange={this.props.onF1Change} value={this.props.f1} />\n                        <div style={{ width: 10, height: 10, backgroundColor: 'white' }} onClick={this.props.onMod1Click}/>\n                        <Knob min={0.1} max={1000} logarithmic onChange={this.props.onF2Change} value={this.props.f2} />\n                        <div style={{ width: 10, height: 10, backgroundColor: 'white' }} onClick={this.props.onMod2Click}/>\n                        <Knob min={0.1} max={1000} logarithmic onChange={this.props.onF3Change} value={this.props.f3} />\n                    </div>\n                    <div style={{ width: 20, height: 20, backgroundColor: 'green' }} onClick={this.onPlayClick} />\n                </div>\n                <div style={{ border: '1px solid black' }}>\n                    <DisplayComponent data={outputSpectrum} id=\"completelooney\" />\n                </div>\n            </div>\n        )\n    }\n\n    onPlayClick = () => {\n        if (this.state.playing) {\n            this.props.onStop()\n            this.setState({ playing: false });\n        } else {\n            this.props.onStart();\n            this.setState({ playing: true });\n        }\n    }\n}","import React from 'react';\nimport { FMComponent } from './fm-component';\n\nexport interface FMSynthesisState {\n    freq1: number;\n    freq2: number;\n    freq3: number;\n    outputSpectrum: Float32Array| number[]\n}\n\nexport class FMSynthesis extends React.Component<any, FMSynthesisState>{\n    private ctx: AudioContext;\n    private osc1: OscillatorNode;\n    private osc2: OscillatorNode;\n    private osc3: OscillatorNode;\n    private amp1: GainNode;\n    private amp2: GainNode;\n    private env: GainNode\n    private interval: any;\n    private analyser: AnalyserNode;\n    private AnalisisInterval: any;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            freq1: 20,\n            freq2: 333,\n            freq3: 440,\n            outputSpectrum: []\n        }\n\n        this.ctx = props.ctx;\n\n        this.osc1 = new OscillatorNode(this.ctx);\n        this.osc1.frequency.value = this.state.freq1;\n\n        this.osc2 = new OscillatorNode(this.ctx);\n        this.osc2.frequency.value = this.state.freq2;\n\n        this.osc3 = new OscillatorNode(this.ctx);\n        this.osc3.frequency.value = this.state.freq3;\n\n        this.amp1 = new GainNode(this.ctx);\n        this.amp1.gain.value = this.state.freq2;\n        this.amp2 = new GainNode(this.ctx);\n        this.amp2.gain.value = this.state.freq3;\n\n        this.env = new GainNode(this.ctx);\n        this.env.gain.value = 0;\n\n        this.analyser = new AnalyserNode(this.ctx);\n\n        this.osc1.connect(this.amp1);\n        this.amp1.connect(this.osc2.frequency);\n        this.osc2.connect(this.amp2);\n        this.amp2.connect(this.osc3.frequency);\n        this.osc3.connect(this.env);\n        this.env.connect(this.analyser);\n        this.analyser.connect(this.ctx.destination);\n\n    }\n\ncomponentDidMount() {\n    this.osc1.start();\n    this.osc2.start();\n    this.osc3.start();\n}\n    render() {\n        return (\n            <FMComponent \n                onStart={this.handleStart}\n                onStop={this.handleStop}\n                onF1Change={this.handleF1Change}\n                onF2Change={this.handleF2Change}\n                onF3Change={this.handleF3Change}\n                f1={this.state.freq1}\n                f2={this.state.freq2}\n                f3={this.state.freq3}\n                outputSpectrum={this.state.outputSpectrum}\n                onMod1Click={this.handleMod1Click}\n                onMod2Click={this.handleMod2Click}\n            />\n        )\n    }\n\n    handleF1Change = freq1 => {\n        this.osc1.frequency.value = freq1;\n        this.setState({freq1})\n    }\n\n    handleF2Change = freq2 => {\n        this.osc2.frequency.value = freq2;\n        this.amp1.gain.value = freq2;\n        this.setState({freq2})\n    }\n\n    handleF3Change = freq3 => {\n        this.osc3.frequency.value = freq3;\n        this.amp2.gain.value = freq3;\n        this.setState({freq3})\n    }\n\n    handleMod1Click = () => {\n        if(this.amp1.gain.value != 0){\n            this.amp1.gain.value = 0;\n        }else {\n            this.amp1.gain.value = this.state.freq2\n        }\n    }\n\n    handleMod2Click = () => {\n        if(this.amp2.gain.value != 0){\n            this.amp2.gain.value = 0;\n        }else {\n            this.amp2.gain.value = this.state.freq3\n        }\n    }\n\n    handleStart = () => {\n        if (this.ctx.state !== 'running') this.ctx.resume();\n\n        this.playSequence()\n        this.interval = setInterval(() => {\n            this.playSequence()\n        }, 4000)\n\n        this.AnalisisInterval = setInterval(() => {\n            const outputSpectrum = new Float32Array(1024);\n            this.analyser.getFloatFrequencyData(outputSpectrum)\n            this.setState({ outputSpectrum });\n        }, 2);\n    }\n\n    handleStop = () => {\n        console.log('start');\n        clearInterval(this.interval)\n    }\n\n    playNote = (time, frequency) => {\n        this.osc3.frequency.setValueAtTime(frequency, time)\n        this.env.gain.linearRampToValueAtTime(1, time + 0.01);\n        this.env.gain.exponentialRampToValueAtTime(0.01, time + 0.23);\n        this.env.gain.linearRampToValueAtTime(0, time + 0.24)\n    }\n\n    playSequence = () => {\n        const now = this.ctx.currentTime;\n        this.playNote(now, 440);\n        this.playNote(now + 0.250, 440);\n\n        this.playNote(now + 0.5, 523);\n        this.playNote(now + 0.75, 440);\n\n        this.playNote(now + 1, 440);\n        this.playNote(now + 1.25, 630);\n        this.playNote(now + 1.5, 391);\n\n        this.playNote(now + 2, 880);\n        this.playNote(now + 2.250, 880);\n\n        this.playNote(now + 2.5, 1046);\n        this.playNote(now + 2.75, 880);\n\n        this.playNote(now + 3, 880);\n        this.playNote(now + 3.25, 1260);\n        this.playNote(now + 3.5, 782);\n    }\n}","import React, { Component } from 'react';\nimport { AditiveSynthesis } from './interactions/aditive';\nimport { strings } from './strings';\nimport \"./App.css\"\nimport { SubtractiveSynthesis } from './interactions/subtractive';\nimport { FMSynthesis } from './interactions/fm';\n\nclass App extends Component<any, any>  {\n  private ctx: AudioContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    }\n\n    // this.ctx = new (AudioContext || webkitAudioContext)();\n    this.ctx = new AudioContext();\n  }\n  render() {\n    return (\n      <div className=\"page\">\n        <h2 className=\"page-title\">{strings.title}</h2>\n\n        <h3 className=\"subtitle\">{strings.soundPhysics.title}</h3>\n        <p className=\"body-text\">{strings.soundPhysics.paragraphs[0]}</p>\n        <div style={{ display: 'flex', alignItems: 'center', flex: 1 }}>\n          <video width=\"80%\" autoPlay loop muted style={{ margin: 'auto' }}>\n            <source src={require(\"./assets/room-waves.mp4\")} type=\"video/mp4\" />\n          </video>\n        </div>\n        <p className=\"body-text\">{strings.soundPhysics.paragraphs[1]}</p>\n        <p className=\"body-text\">{strings.soundPhysics.paragraphs[2]}</p>\n        <div style={{ display: 'flex', alignItems: 'center', flex: 1 }}>\n          <video width=\"80%\" autoPlay loop muted style={{ margin: 'auto' }}>\n            <source src={require(\"./assets/wave0001-0128.webm\")} type=\"video/WebM\" />\n          </video>\n        </div>\n        <p className=\"body-text\">{highlighter(strings.soundPhysics.paragraphs[3])}</p>\n        <p className=\"body-text\">{highlighter(strings.soundPhysics.paragraphs[4])}</p>\n        <p className=\"body-text\">{highlighter(strings.soundPhysics.paragraphs[5])}</p>\n        <p className=\"body-text\">{highlighter(strings.soundPhysics.paragraphs[6])}</p>\n        <img src={require('./assets/timbres.png')} width=\"80%\" style={{ margin: \"40px 0 \" }} />\n        <h3 className=\"subtitle\">{strings.spectrum.title}</h3>\n        <p className=\"body-text\">{highlighter(strings.spectrum.paragraphs[0])}</p>\n        {/* imagem aqui */}\n        <p className=\"body-text\">{strings.spectrum.paragraphs[1]}</p>\n        <AditiveSynthesis ctx={this.ctx} />\n\n        <h3 className=\"subtitle\">{strings.synthesis.title}</h3>\n        <p className=\"body-text\">{strings.synthesis.paragraphs[0]}</p>\n        <h3 className=\"subtitle\">{strings.additive.title}</h3>\n        <p className=\"body-text\">{strings.additive.paragraphs[0]}</p>\n\n        <h3 className=\"subtitle\">{strings.subtractive.title}</h3>\n        <p className=\"body-text\">{strings.subtractive.paragraphs[0]}</p>\n        <SubtractiveSynthesis ctx={this.ctx} />\n\n        <h3 className=\"subtitle\">{strings.fm.title}</h3>\n        <p className=\"body-text\">{strings.fm.paragraphs[0]}</p>\n        <div style={{ display: 'flex', alignItems: 'center', flex: 1 }}>\n          <video width=\"80%\" autoPlay loop muted style={{ margin: 'auto' }}>\n            <source src={require(\"./assets/fm.mp4\")} type=\"video/mp4\" />\n          </video>\n        </div>\n        <p className=\"body-text\">{strings.fm.paragraphs[1]}</p>\n        <div style={{ display: 'flex', alignItems: 'center', flex: 1 }}>\n          <img src={require('./assets/fm-schema.png')} width={'80%'} />\n        </div>\n        <p className=\"body-text\">{strings.fm.paragraphs[2]}</p>\n\n        <FMSynthesis ctx={this.ctx} />\n        <h3 className=\"subtitle\">{strings.others.title}</h3>\n        <p className=\"body-text\">{strings.others.paragraphs[0]}</p>\n        <p className=\"body-text\">{strings.others.paragraphs[1]}</p>\n        <p className=\"body-text\">{strings.others.paragraphs[2]}</p>\n      </div>\n    );\n  }\n}\n\nconst highlighter = text => {\n  const achoredText = '$' + text + '$';\n  const pieces = achoredText.split(/(<strong>)|(<\\/strong>)/).filter(piece => piece && !piece.includes('strong'))\n  return <React.Fragment>\n    {pieces.map((piece, idx) => {\n      const cleanPiece = piece.replace('$', '');\n      return idx % 2 === 1 ? <strong key={cleanPiece + idx}>{cleanPiece}</strong> : cleanPiece\n    })}\n  </React.Fragment>\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}